# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: nanover/grpc/protocol/array.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'nanover/grpc/protocol/array.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!nanover/grpc/protocol/array.proto\x12\x15nanover.grpc.protocol\"\x1c\n\nFloatArray\x12\x0e\n\x06values\x18\x01 \x03(\x02\"\x1c\n\nIndexArray\x12\x0e\n\x06values\x18\x01 \x03(\r\"\x1d\n\x0bStringArray\x12\x0e\n\x06values\x18\x01 \x03(\t\"\xc9\x01\n\nValueArray\x12\x39\n\x0c\x66loat_values\x18\x01 \x01(\x0b\x32!.nanover.grpc.protocol.FloatArrayH\x00\x12\x39\n\x0cindex_values\x18\x02 \x01(\x0b\x32!.nanover.grpc.protocol.IndexArrayH\x00\x12;\n\rstring_values\x18\x03 \x01(\x0b\x32\".nanover.grpc.protocol.StringArrayH\x00\x42\x08\n\x06valuesb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nanover.grpc.protocol.array_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_FLOATARRAY']._serialized_start=60
  _globals['_FLOATARRAY']._serialized_end=88
  _globals['_INDEXARRAY']._serialized_start=90
  _globals['_INDEXARRAY']._serialized_end=118
  _globals['_STRINGARRAY']._serialized_start=120
  _globals['_STRINGARRAY']._serialized_end=149
  _globals['_VALUEARRAY']._serialized_start=152
  _globals['_VALUEARRAY']._serialized_end=353
# @@protoc_insertion_point(module_scope)
